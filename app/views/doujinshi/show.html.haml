.columns
  .column.is-2.has-text-centered
    %figure.image.is2by3
      = image_tag("/thumbs/#{@doujin.id}.webp")
  .column.pl-5
    %table.table.is-striped.is-fullwidth
      %tr
        %th.w1 Title
        %td= @doujin.label_name_latin
      - if @doujin.name != @doujin.label_name_latin
        %tr
          %th Alt.
          %td
            .kanji= @doujin.name
      - if @doujin.authors.any?
        %tr
          %th Author
          %td= @doujin.authors.map{|i| link_to(i.label_name_latin,
            doujinshi_path(tab: :author, author_id: i.id),
            target: :_blank) }.sort.join(', ').html_safe
      - if @doujin.circles.any?
        %tr
          %th Circle
          %td= @doujin.circles.map{|i| link_to(i.label_name_latin,
            doujinshi_path(tab: :circle, circle_id: i.id),
            target: :_blank) }.sort.join(', ').html_safe
      %tr
        %th Info
        %td
          %span.icon-text
            %span.icon.is-small.mr-3
              %i.mi auto_stories
            %span= @doujin.num_images
            
            - if @doujin.num_files.to_i > 0
              %span.icon.is-small.mr-3.ml-6
                %i.mi insert_drive_file
              %span= @doujin.num_files
            
            %span.icon.is-small.ml-5
              %i.mi monitor_weight
            %span= number_to_human_size @doujin.size, precision: 2
            
            %span.icon.is-small.ml-5
              %i.mi sync_alt
            %span= @doujin.reading_direction
            
            %span.icon.is-small.ml-5
              %i.mi.mi-small language
            %span= @doujin.language
            
            %span.icon.is-small.ml-5
              %i.mi.mi-small visibility_off
            %span= @doujin.censored? ? :cen : :unc
            
            - if @doujin.colorized?
              %span.icon.is-small.ml-5
                %i.mi.mi-small format_paint
              %span col
            
            - if @doujin.score.to_i > 0
              %span.icon.is-small.ml-5
                %i.mi star_rate
              %span= "#{@doujin.score}/10"
      %tr
        %th Score
        %td
          = form_with url: score_doujin_path(@doujin) do |f|
            = f.hidden_field :from_author, value: params[:from_author]
            = f.hidden_field :from_circle, value: params[:from_circle]
            = f.hidden_field :score, value: @doujin.score.to_i
            .scoring
              - (1..10).each do |i|
                %span.icon.is-medium.set-score{data: {score: i},
                  class: (i <= @doujin.score.to_i ? 'has-text-warning' : ''), title: i}
                  %i.mi.mi-medium= i <= @doujin.score.to_i ? :star_rate : :star_outline
                  %span= i
              %span.icon.is-medium.ml-5.clear-score{data: {score: 0}}
                %i.mi.mi-medium(title="clear") clear
            - if @doujin.score.to_i > 0 && @doujin.scored_at
              .scored_at.is-size-7.pl-6
                scored at
                = l @doujin.scored_at
      %tr
        %th Path
        %td= @doujin.file_path
      %tr
        %th Orig.
        %td= @doujin.name_orig
      - if @doujin.notes.present?
        %tr
          %th Notes
          %td.is-family-monospace.is-italic= @doujin.notes
    
    .columns
      .column.is-third
        .actions.field.is-grouped
          .field.has-addons
            %p.control
              = link_to read_doujin_path(@doujin, format: :ereader, page: @doujin.read_pages.to_i, from_format: :html), class: 'button is-info is-rounded' do
                %span.icon
                  %i.mi.mi-small chrome_reader_mode
                %span= @doujin.read_pages.to_i > 0 ? "Read (#{@doujin.percent_read.round}%)" : :Read
            %p.control
              = link_to doujin_path(@doujin, run: :mcomix, format: :json),
                  onclick: %Q|var bt=jQuery(this); bt.addClass('is-loading'); setTimeout(function(){ bt.removeClass('is-loading') }, 5000)|,
                  remote: true, class: 'button is-info is-rounded' do
                %span.icon
                  %i.mi.mi-small launch
                %span Mcomix
            - if @doujin.num_images > 10
              %p.control
                = link_to doujin_path(@doujin, sample: true), class: 'button is-info is-rounded' do
                  %span.icon
                    %i.mi.mi-small casino
                  %span Sample
      
      .column.is-third
        .actions.field.is-grouped
          .field.has-addons
            %p.control
              = link_to epub_doujinshi_path(convert: @doujin.id), class: 'button is-link is-rounded' do
                %span.icon
                  %i.mi.mi-small construction
                %span EPUB
            %p.control
              = link_to doujin_path(@doujin, format: :cbz), class: 'button is-link is-rounded' do
                %span.icon
                  %i.mi.mi-small file_download
                %span CBZ
            %p.control
              = link_to doujin_path(@doujin, format: :zip), class: 'button is-link is-rounded' do
                %span.icon
                  %i.mi.mi-small file_download
                %span ZIP
      
      .column
        - url_params = params.permit(:from_author, :from_circle).to_h
        
        .actions.field.is-grouped
          .field.has-addons
            %p.control
              = link_to doujin_path(@doujin, url_params.merge(check_hash: true)),
                  title: 'test checksum', class: 'button is-info is-rounded' do
                %span.icon
                  %i.mi.mi-small verified
                %span HASH
            %p.control
              = link_to doujin_path(@doujin, url_params.merge(check_zip: true)),
                  title: 'test ZIP file', class: 'button is-info is-rounded' do
                %span.icon
                  %i.mi.mi-small verified
                %span ZIP

= render partial: 'actions'

- if @doujin.num_images > 10 && params[:sample]
  .columns
    - start_idx = (rand(@doujin.num_images - 1 - 5) + 1).to_i
    - (start_idx...(start_idx+3)).each do |i|
      .column.is-4.has-text-centered
        .is-size-7= "page #{i}"
        %figure.image.is2by3
          = image_tag image_doujin_path(@doujin, page: i)
