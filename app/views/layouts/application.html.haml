!!!
%html
  %head
    %meta{charset: "utf-8"}/
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %meta{:content => "width=device-width,initial-scale=1", :name => "viewport"}/
    -# https://www.html.am/html-codes/image-codes/html-favicon-code.cfm
    %link{rel: "shortcut icon"   , href: "/favicon.ico"}/
    %link{rel: "apple-touch-icon", href: "/apple-touch-icon.png"}/
    %title doujinshi manager
    = csrf_meta_tags
    = csp_meta_tag
    = stylesheet_link_tag "application"
    = javascript_include_tag "application"
  %body{data: {ctrl: params[:controller], action: params[:action], id: params[:id]}}
    %nav.navbar{role: "navigation"}
      .navbar-brand
        %a.navbar-item(href='/' title='vai alla home page')= image_tag 'logo-small.png'
        %a.navbar-burger{:role => "button", :'data-target' => "appNavbar",
          :onclick => %Q|jQuery(this).add('#appNavbar').toggleClass('is-active') | }
          %span
          %span
          %span

      #appNavbar.navbar-menu
        .navbar-start
          %span.navbar-item{class: "#{params[:controller]}/#{params[:action]}" != 'home/settings' ? nil : 'is-current'}
            = link_to home_settings_path do
              %span.icon-text
                %span.icon
                  %i.mi settings
                %span Setup
          
          %span.navbar-item{class: params[:controller] != 'process' ? nil : 'is-current'}
            = link_to process_index_path do
              %span.icon-text
                %span.icon
                  %i.mi swap_horiz
                %span Process
          
          %span.navbar-item.has-dropdown{class: (params[:controller] != 'doujinshi' ? nil : 'is-current'),
            onclick: "jQuery(this).toggleClass('is-active')"}
            %a.navbar-link
              %span.icon-text
                %span.icon.mr-2
                  %i.mi book
                %span Doujin
            .navbar-dropdown
              = link_to doujinshi_path, class: 'navbar-item', style: 'display: inline' do
                %span.icon-text
                  %span.icon.mr-2
                    %i.mi apps
                  %span Collection
              %br/
              %br/
              = link_to favorites_doujinshi_path, class: 'navbar-item', style: 'display: inline' do
                %span.icon-text
                  %span.icon.mr-2
                    %i.mi auto_awesome
                  %span Favorites
              %br/
              %br/
              = link_to epub_doujinshi_path, class: 'navbar-item', style: 'display: inline' do
                %span.icon-text
                  %span.icon.mr-2
                    %i.mi.mi-small construction
                  %span EPUBs
          
          %span.navbar-item
            = form_with url: search_doujinshi_path, method: :get do |f|
              .field.has-addons
                .control= f.text_field :term, value: params[:term], placeholder: :search, class: 'input is-rounded'
                -#.control
                -#  = f.button class: 'button is-light is-rounded' do
                -#    %span.icon
                -#      %i.mi.mi-small search
        
          %span.navbar-item.has-dropdown{class: (%w{ authors circles themes }.include?(params[:controller]) ? 'is-current' : nil),
            onclick: "jQuery(this).toggleClass('is-active')"}
            %a.navbar-link
              %span.icon-text
                %span.icon.mr-2
                  %i.mi folder_shared
                %span Metadata
            .navbar-dropdown
              = link_to authors_path, class: 'navbar-item', style: 'display: inline' do
                %span.icon-text
                  %span.icon.mr-2
                    %i.mi supervisor_account
                  %span Authors
              %br/
              %br/
              = link_to circles_path, class: 'navbar-item', style: 'display: inline' do
                %span.icon-text
                  %span.icon.mr-2
                    %i.mi supervised_user_circle
                  %span Circles
              %br/
              %br/
              = link_to themes_path, class: 'navbar-item', style: 'display: inline' do
                %span.icon-text
                  %span.icon.mr-2
                    %i.mi.mi-small local_offer
                  %span Themes
          
        -#.navbar-end
        -#  .navbar-item
        -#    .buttons
        -#      - if true # Current.user
        -#        = link_to '#', class: 'button is-primary' do
        -#          %span.icon.is-small
        -#            %i.mi logout
        -#          %span Logout

    %section.section.main-content
      -# NOTE: "notice" and "alert" are Rails defaults, "warn" is a custom key
      - {notice: 'is-info', warn: 'is-warning', alert: 'is-danger'}.each do |key, css_class|
        - if flash[key].present?
          .is-size-5.notification{class: css_class}
            - if flash[key].is_a?(String)
              = flash[key]
            - elsif flash[key].is_a?(Array)
              - if flash[key].one?
                = flash[key].first
              - else
                .content
                  %ul.mt-0
                    - flash[key].each do |msg|
                      %li= msg
      
      = yield

    #loading.modal
      .modal-background
      .modal-content

    #js-tagger-modal.modal
      .modal-background
      .modal-card(style="height: calc(100vh - 40px)")
        %header.modal-card-head
          %p.modal-card-title Add tags
          %button.delete.js-tagger-cancel
        %section.modal-card-body
          .columns
            .column.is-half
              .field.is-grouped.is-grouped-multiline.current-tags
            .column.is-half.search-area(style="border-left: 1px solid silver")
              .control.has-icons-left
                %input.input.is-rounded.js-tagger-term{type: :text, placeholder: :search}
                %span.icon.is-small.is-left
                  %i.mi.mi-small search
                %nav.panel.lookup-results
        %footer.modal-card-foot
          %button.button.is-success.js-tagger-set Set
          %button.button.js-tagger-cancel Cancel
