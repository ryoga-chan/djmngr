!!!
%html
  %head
    %meta{charset: "utf-8"}/
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %meta{:content => "width=device-width,initial-scale=1", :name => "viewport"}/
    = render "application/favicon"
    %title= "DjMngr | #{@page_title || params[:controller]}"
    = csrf_meta_tags
    = csp_meta_tag
    = stylesheet_link_tag    "01_libs"
    = stylesheet_link_tag    "02_application"
    = javascript_include_tag "01_libs"
    = javascript_include_tag "02_application"
  %body{data: {env: Rails.env.to_s, ctrl: params[:controller], action: params[:action], id: params[:id]}}
    %nav.navbar{role: "navigation"}
      .navbar-brand
        %a.navbar-item(href='/' title='home page')= image_tag 'logo.webp', style: "border-radius: 0.5rem", class: 'app-logo'
        %a.navbar-burger.no-spinner{:role => "button", :'data-target' => "appNavbar",
          :onclick => %Q|jQuery(this).add('#appNavbar').toggleClass('is-active') | }
          %span
          %span
          %span

      #appNavbar.navbar-menu
        .navbar-start
          %span.navbar-item{class: params[:controller] != 'process' ? nil : 'is-current'}
            = link_to process_index_path, class: 'has-text-white' do
              %span.icon-text
                %span.icon
                  %i.mi swap_horiz
                %span Process
          
          %span.navbar-item.has-dropdown{class: (params[:controller] != 'doujinshi' ? nil : 'is-current'),
            onclick: "jQuery(this).toggleClass('is-active')"}
            %a.navbar-link
              %span.icon-text
                %span.icon
                  %i.mi book
                %span Doujinshi
            .navbar-dropdown
              = link_to doujinshi_path, class: 'navbar-item' do
                %span.icon
                  %i.mi apps
                %span Browse
              = link_to favorites_doujinshi_path, class: 'navbar-item' do
                %span.icon
                  %i.mi auto_awesome
                %span Favorites
              = link_to scored_doujinshi_path, class: 'navbar-item' do
                %span.icon
                  %i.mi star_half
                %span Scores
              = link_to shelves_path, class: 'navbar-item' do
                %span.icon
                  %i.mi shelves
                %span Shelves
              = link_to epub_doujinshi_path, class: 'navbar-item' do
                %span.icon
                  %i.mi library_books
                %span EPUBs
              = link_to compare_doujinshi_path, class: 'navbar-item' do
                %span.icon
                  %i.mi compare
                %span Comparison
          
          %span.navbar-item
            = form_with url: search_doujinshi_path, method: :get,
              html: {onsubmit: %Q|jQuery(this).find('button').addClass('is-loading'); jQuery.myapp.show_loading()|} do |f|
              .field.has-addons
                .control= f.text_field :term, value: params[:term], placeholder: :search,
                  id: 'global-search', class: 'input is-rounded'
                .control
                  .select= f.select :where,
                    options_for_select(%w{ doujinshi authors circles themes }, params[:controller]),
                    {}, class: 'input is-rounded',
                    onchange: %Q|if ($('#term:first').val().trim().length > 0) this.form.submit()|
                .control
                  = f.button class: 'button is-light is-rounded is-outlined' do
                    %span.icon
                      %i.mi search
        
          %span.navbar-item.has-dropdown{class: (%w{ authors circles themes }.include?(params[:controller]) ? 'is-current' : nil),
            onclick: "jQuery(this).toggleClass('is-active')"}
            %a.navbar-link
              %span.icon-text
                %span.icon
                  %i.mi folder_shared
                %span Metadata
            .navbar-dropdown
              = link_to authors_path, class: 'navbar-item' do
                %span.icon-text
                  %span.icon
                    %i.mi supervisor_account
                  %span Authors
              = link_to circles_path, class: 'navbar-item' do
                %span.icon-text
                  %span.icon
                    %i.mi supervised_user_circle
                  %span Circles
              = link_to themes_path, class: 'navbar-item' do
                %span.icon-text
                  %span.icon
                    %i.mi local_offer
                  %span Themes
          
          %span.navbar-item.has-dropdown{class: ("#{params[:controller]}/#{params[:action]}" == 'home/settings' ? 'is-current' : nil),
            onclick: "jQuery(this).toggleClass('is-active')"}
            %a.navbar-link
              %span.icon-text
                %span.icon
                  %i.mi construction
                %span Tools
            .navbar-dropdown
              = link_to home_settings_path, class: 'navbar-item' do
                %span.icon-text
                  %span.icon
                    %i.mi settings
                  %span Settings

              %span.navbar-item
                = form_with url: search_cover_doujinshi_path, method: :post, html: {style: 'margin-left: -0.6rem'} do |f|
                  .file.is-primary
                    %label.file-label
                      = f.file_field :cover, class: 'file-input', id: '',
                        onchange: %Q|jQuery(this).next().find('i.mi').text('hourglass_bottom'); jQuery.myapp.show_loading(); this.form.submit()|
                      %span.file-cta
                        %span.file-icon.mr-3
                          %i.mi image_search
                        %span.file-label
                          Cover match
              
              - ext_lbl, ext_url = Setting[:external_link].to_s.split('|')
              - if ext_lbl.present? && ext_lbl.present?
                = link_to ext_url, class: 'navbar-item no-spinner', target: :_blank do
                  %span.icon-text
                    %span.icon
                      %i.mi launch
                    %span= ext_lbl
          
        .navbar-end
          .navbar-item
            .buttons
              = link_to '#', class: 'button is-primary no-spinner nsfw-mode-toggle', title: 'toggle NSFW mode' do
                %span.icon-text
                  %span.icon
                    %i.mi shield
              -#- if true # Current.user
              -#  = link_to '#', class: 'button is-primary' do
              -#    %span.icon
              -#      %i.mi logout
              -#    %span Logout
              = link_to(root_path(format: :ereader), class: 'button is-primary', title: 'view in e-reader format') do
                %span.icon
                  %i.mi tablet_android
                -#%span e-reader

    %section.section.main-content
      -# NOTE: "notice" and "alert" are Rails defaults, "warn" is a custom key
      - {notice: 'is-info', warn: 'is-warning', alert: 'is-danger'}.each do |key, css_class|
        - if flash[key].present?
          .is-size-5.notification{class: css_class}
            - if flash[key].is_a?(String)
              = flash[key]
            - elsif flash[key].is_a?(Array)
              - if flash[key].one?
                = flash[key].first
              - else
                .content
                  %ul.mt-0
                    - flash[key].each do |msg|
                      %li= msg
      
      = yield

    #loading.modal
      .modal-background
      .modal-content

    #js-tagger-modal.modal
      .modal-background
      .modal-card(style="height: calc(100vh - 40px)")
        %header.modal-card-head
          %p.modal-card-title Add tags
          %button.delete.js-tagger-cancel
        %section.modal-card-body
          .columns
            .column.is-half
              .field.is-grouped.is-grouped-multiline.current-tags
            .column.is-half.search-area(style="border-left: 1px solid silver")
              .control.has-icons-left
                %input.input.is-rounded.js-tagger-term{type: :text, placeholder: :search}
                %span.icon.is-small.is-left
                  %i.mi.mi-small search
                %nav.panel.lookup-results
        %footer.modal-card-foot
          %button.button.is-success.js-tagger-set Set
          %button.button.js-tagger-cancel Cancel
    
    #generic-modal.modal
      .modal-background(onclick="jQuery(this).parent().removeClass('is-active')")
      .modal-card
        %header.modal-card-head
          %p.modal-card-title title
          %button.delete(onclick="jQuery(this).parents('.modal:first').removeClass('is-active')")
        %section.modal-card-body

    #mobile-toolbar.is-hidden-tablet
      = link_to '#', class: 'button is-primary nsfw-mode-toggle' do
        %span.icon-text
          %span.icon
            %i.mi shield
