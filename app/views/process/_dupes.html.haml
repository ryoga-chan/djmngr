.columns{style: (@dupes.any? ? 'border-bottom: 1px dashed silver' : '')}
  .column
    %figure.image.is2by3
      - if @info[:images].any?
        = link_to show_image_process_path(id: @info[:working_dir], path: @info[:images].first[:src_path]), target: :_blank do
          = thumbnail_tag ProcessArchiveDecompressJob.cover_path(@dname, @info), title: 'current cover'
      - else
        %img(src="/not-found.png")
  
  .column.is-10
    .name_orig.mb-1
      %span.icon.in-text-small.mr-2
        %i.mi.mi-small(title="original filename") photo_filter
      - if @info[:relative_path].one?
        %span= render partial: 'file_actions', locals: {fname: @info[:relative_path].first}
      = @fname

    .dest-filename.mb-1
      - title = @fname.tokenize_doujin_filename(title_only: true).join ' '
      = form_with url: set_property_process_path do |f|
        = f.hidden_field :tab, value: params[:tab]
        %span.icon.in-text-small.mr-2
          %i.mi.mi-small(title="terms for catalog search") search
        = f.text_field :dupe_search, value: @info[:dupe_search], placeholder: 'search terms in sequence',
          class: 'input is-small', style: 'width: 18rem',
          data: { orig_name: title }
        = f.button class: 'button is-small' do
          %span.icon
            %i.mi.mi-small send
        = f.button class: 'button is-small',
          onclick: %Q|$('#dupe_search').val($('#dupe_search').data('orig-name')); return false;| do
          %span.icon
            %i.mi.mi-small(title="restore initial search term") restore
        
        %span.ml-6= links_to_search_engines @info[:dupe_search], target: :_blank

    .tags.has-addons.my-3
      %span.tag.is-info= @cur_info
      - if @dupes.any?
        %span.tag.is-danger= "#{@dupes.size} potential duplicate/s found"
      - else
        %span.tag.is-success= "NO duplicates found in collection"
    
    .tags.has-addons.mt-0
      %span.tag.is-info= "cover matching status: "
      %span.tag.is-link= @info[:cover_status]
      - if @info[:cover_status] != :completed
        = link_to('refresh', {tab: :dupes}, class: :tag)
      - else
        = link_to('restart', {tab: :dupes, rematch_cover: true}, class: 'tag is-warning')

- @dupes_deleted.each_slice(2) do |s|
  .columns
    - s.each do |d|
      .column.is-2.has-text-centered.is-hidden-mobile
        %span.icon.is-large
          %i.mi.mi-large hide_image
      .column
        .info
          .tags.has-addons
            %span.tag.is-info= "#{d.num_images} pics/#{number_to_human_size d.size}"
            - if d.cover_similarity
              %span.tag.is-warning= "#{'%2d' % d.cover_similarity}% cover similarity"
        .now.has-text-strikethrough.has-text-info(title="collection path" style="border-bottom: 1px solid silver")
          = d.doujin_id ? "Doujin##{d.doujin_id} @ #{d.name}" : "Deleted##{d.id} @ #{d.name}"
        .was.has-text-strikethrough(title="alt name")= d.alt_name.present? ? d.alt_name : '--'

- if @dupes_deleted.any? && @dupes.any?
  %hr

- @dupes.each_slice(2) do |s|
  .columns.freezeframe
    - s.each do |d|
      .column.is-2
        %figure.image.is2by3
          = link_to image_tag(d.thumb_path, loading: :lazy, decoding: :async),
            image_doujin_path(d, page: 0), target: :_blank
      .column
        .info
          .tags.has-addons
            %span.tag.is-info= "#{d.num_images} pics/#{number_to_human_size d.size}"
            - if d.cover_similarity
              %span.tag.is-warning= "#{'%2d' % d.cover_similarity}% cover similarity"
            - if d.score.to_i != 0
              %span.tag.is-info!= "#{d.score}&star;"
        .now(title="collection path" style="border-bottom: 1px solid silver")
          = render partial: 'doujin_actions', locals: { d: d }
          
          = link_to "##{d.id} @ #{d.file_path}", doujin_path(d), target: :_blank
          = link_to({ident_from: d.id},
            title: 'clone relations, folders, titles',
            class: 'button is-info is-rounded is-small tiny-bt') do
            %span.icon.is-small
              %i.mi.mi-small file_copy
        .was(title="original name")= d.name_orig
