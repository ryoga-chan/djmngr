.columns{style: (@dupes.any? ? 'border-bottom: 1px dashed silver' : '')}
  .column
    %figure.image.is2by3
      = link_to show_image_process_path(id: @info[:working_dir], path: @info[:images].first[:src_path]), target: :_blank do
        = thumbnail_tag ProcessArchiveDecompressJob.cover_path(@dname, @info), title: 'current cover'
  
  .column.is-10
    .name_orig.mb-1
      %span.icon.in-text-small.mr-2
        %i.mi.mi-small(title="original filename") photo_filter
      %span= render partial: 'file_actions', locals: {fname: @info[:relative_path]}
      = @fname

    .dest-filename.mb-1
      = form_with url: set_property_process_path do |f|
        = f.hidden_field :tab, value: params[:tab]
        %span.icon.in-text-small.mr-2
          %i.mi.mi-small(title="terms for catalog search") search
        = f.text_field :dupe_search, value: @info[:dupe_search], placeholder: 'search terms in sequence',
          class: 'input is-small', style: 'width: 40rem',
          data: { orig_name: @info[:relative_path].tokenize_doujin_filename.join(' ') }
        = f.button class: 'button is-small' do
          %span.icon
            %i.mi.mi-small send
        = f.button class: 'button is-small',
          onclick: %Q|$('#dupe_search').val($('#dupe_search').data('orig-name')); return false;| do
          %span.icon
            %i.mi.mi-small(title="restore initial search term") restore

      .columns.mt-3
        .column
          - if @dupes.any?
            .tags.has-addons
              %span.tag.is-info= "this file: #{@cur_info}"
              %span.tag.is-danger= "#{@dupes.size} potential duplicate/s found in collection"
          - else
            %span.tag.is-success= "NO duplicates found in collection"
        
        .column.is-5
          = links_to_search_engines @info[:relative_path].tokenize_doujin_filename.join(' '), target: :_blank
    
    .tags.has-addons.mt-3
      %span.tag.is-info= "cover matching status: "
      %span.tag.is-link= @info[:cover_status]
      - if @info[:cover_status] != :completed
        = link_to('refresh', {tab: :dupes}, class: :tag)
      - else
        = link_to('restart', {tab: :dupes, rematch_cover: true}, class: :tag)

- @dupes.each_slice(2) do |s|
  .columns
    - s.each do |d|
      .column.is-2
        %figure.image.is2by3
          = link_to image_tag(doujin_path(d, format: :webp)),
            image_doujin_path(d, page: 0), target: :_blank
      .column
        .info
          .tags.has-addons
            %span.tag.is-info= "#{d.num_images} pics/#{number_to_human_size d.size}"
            - if d.cover_similarity
              %span.tag.is-warning= "#{'%2d' % d.cover_similarity}% cover similarity"
        .now(title="collection path" style="border-bottom: 1px solid silver")
          - bt_sample = capture do
            - ts = Time.now.to_i
            = link_to doujin_path(d, sample: ts, anchor: "sample-#{ts}"),
              title: 'view sample images', target: :_blank,
              class: 'button is-info is-rounded is-small tiny-bt' do
              %span.icon.is-small
                %i.mi.mi-small casino
          
          %span
            .is-inline-flex.is-hidden-mobile
              .field.has-addons
                %p.control= bt_sample
                %p.control
                  = link_to doujin_path(d, run: :comics_viewer, format: :json),
                      title: 'read with external viewer',
                      remote: true, class: 'button is-info is-rounded is-small tiny-bt run-progr' do
                    %span.icon.is-small
                      %i.mi.mi-small launch
            
            .is-inline-flex.is-hidden-desktop
              %p.control= bt_sample
            
          = link_to "##{d.id} @ #{d.file_path}", doujin_path(d), target: :_blank
        .was(title="original name")= d.name_orig
