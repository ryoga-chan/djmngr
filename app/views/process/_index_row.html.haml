- has_thumb = File.exist?(f.thumb_path)
- is_doujin = f.is_a? Doujin
- tr_class  = cycle :odd, :even

- group_entry_tags = nil
- if @group_sort
  - group_entry_tags = capture do
    - if is_doujin ? (!f.censored)         : f.group_sort_flags[0] == '0'
      .tag.is-danger.is-light.is-small  unc
    - if is_doujin ? (f.language == 'eng') : f.group_sort_flags[1] == '0'
      .tag.is-danger.is-light.is-small  eng
    - if is_doujin ? (f.language == 'jpn') : f.group_sort_flags[2] == '0'
      .tag.is-success.is-light.is-small jpn
    - if is_doujin ? (f.language == 'kor') : f.group_sort_flags[3] == '0'
      .tag.is-info.is-light.is-small    kor
    - if is_doujin ? (f.language == 'chi') : f.group_sort_flags[4] == '0'
      .tag.is-danger.is-lightX.is-small  chi

%tr{class: tr_class, data: {id: f.id, group_item_id: local_assigns[:pair_data]&.id}}
  %td.rm-or-batch.w1.has-text-centered
    - if is_doujin
      .has-text-warning.my-2
        = f.score || :'--'
        &star;
    - else
      .file-select.mb-3= check_box_tag 'file_ids[]', f.id, false,
        id: '', data: {size: f.size}, tabindex: (1000+idx)

    .mb-1= render partial: 'entry_menu', locals: { f: f, has_thumb: has_thumb, is_doujin: is_doujin }

    - if is_doujin
      = link_to(doujin_path(id: f.id),
        method: :delete, data: { confirm: 'Delete from collection?' },
        class: 'button is-danger is-rounded is-small tiny-bt delete-file mt-1', title: 'delete from collection') do
        %span.icon.is-small
          %i.mi.mi-small delete
    - else
      = link_to({action: :delete_archive, path: f.name, page: params[:page], sort_by: params[:sort_by], term: params[:term], row: idx},
        method: :delete, data: { confirm: 'Delete from to-sort folder?' },
        class: 'button is-danger is-rounded is-small tiny-bt delete-file mt-1',
        title: 'delete from to-sort folder') do
        %span.icon.is-small
          %i.mi.mi-small delete

  %td.batch-size.file-size.has-text-right.w1
    .nowrap
      - if f.images
        .images
          %span<>= f.images
          %span.is-size-8 P
        - mean_page_weight = (f.size.to_f / f.images)
        - if mean_page_weight > (local_assigns[:max_page_weight] || 0.6.megabytes)
          .tag.is-warning.is-size-8= "#{number_to_human_size mean_page_weight}/P"
      .size
        - num, unit = number_to_human_size(f.size).split(' ')
        %span<>= num
        %span.is-size-8= unit[0]
    - if @group_sort
      .group-entry-tags.is-hidden-desktop= group_entry_tags

  %td.batch-bts.w1.nowrap
    - if @group_sort && is_doujin
      = render partial: 'doujin_actions', locals: { d: f, vertical: true }
    - else
      = render partial: 'file_actions', locals: {fname: f.name, id: f.id, vertical: true}
    .group-entry-tags.is-hidden-touch= group_entry_tags

  %td
    %a{name: "row_#{idx}"}
    .name
      - if @group_sort && is_doujin
        = link_to f.file_dl_name(omit_ext: true), doujin_path(f), target: :_blank
      - else
        - if @preparing_paths.include?(f.name)
          %span.tag.is-warning(title="processing") ðŸ› 
        = link_to f.name, {action: :prepare_archive, path: f.name}, class: 'process-file'

    - if @group_sort && is_doujin
      - if f.name_romaji.present?
        .name_kakasi.is-size-7= f.name_romaji
      - if f.name_eng.present?
        .name_eng.is-italic.is-size-7= f.name_eng
    - else
      - if f.name != f.name_kakasi
        .name_kakasi.is-size-7= f.name_kakasi

    - if @group_sort
      .grop-actions.mt-2
        - if local_assigns[:pair_data].nil?
          %a.button.is-info.is-rounded.is-small(href="#" disabled title="can't ungroup the reference file")
            %span.icon.is-small
              %i.mi.mi-small clear
            %span.is-hidden-touch.mr-1 ungroup
            %span= f.id
            %span.icon.is-small
              %i.mi.mi-small group_work
            %span= f.id
        - else
          = link_to(group_rm_process_path(id: local_assigns[:pair_data].id,
                                          parent_id: local_assigns[:pair_data].pd_parent_id,
                                          page: params[:page], sort_by: params[:sort_by], row: idx),
            method: :delete, remote: true, data: { confirm: 'Remove file from group?' },
            title: 'remove from group', class: 'button is-info is-rounded is-small remove') do
            %span.icon.is-small
              %i.mi.mi-small clear
            %span.is-hidden-touch.mr-1 ungroup
            %span= is_doujin ? "[#{f.id}]" : f.id
            %span.icon.is-small
              %i.mi.mi-small group_work
            %span= local_assigns[:pair_data].pd_parent_id

- if @group_sort && is_doujin
  %tr.sample.freezeframe{class: tr_class}
    %td.has-text-centered
      - if local_assigns[:pair_data]
        .likeness.is-size-7.mb-1
          .tag.is-warning= "#{local_assigns[:pair_data]&.likeness}%"
    %td(colspan=3)
      .columns
        .column.is-5-mobile.is-3-tablet.is-3-desktop
          %figure.image.is2by3
            = link_to image_tag(f.thumb_path, loading: :lazy, decoding: :async),
              image_doujin_path(f, page: 0), target: :_blank
- else
  %tr{class: tr_class}
    %td.has-text-centered
      = button_tag(type: :button, title: 'copy file name & select this entry',
        class: 'bt-copy button is-info is-rounded is-small tiny-bt mt-2') do
        %span.icon.is-small
          %i.mi.mi-small content_copy

      - if local_assigns[:pair_data]
        .likeness.is-size-7.mt-3
          .tag.is-warning= "#{local_assigns[:pair_data]&.likeness}%"

    %td(colspan=3)
      = button_tag(type: :button, title: 'paste clipboard contents into notes',
          class: 'bt-paste button is-info is-rounded is-small tiny-bt mt-2 mr-2') do
        %span.icon.is-small
          %i.mi.mi-small content_paste

      %input.input.is-small.pd-notes{value: f.notes, tabindex: (5000+idx),
        placeholder: :notes, maxlength: 255, data: {url: pd_notes_process_path(f.id)}}

      - if has_thumb
        %figure.image.sample.mt-2
          = link_to f.thumb_url(mobile: true), target: :_blank do
            %picture
              %source{media: "(min-width: 769px)", srcset: f.thumb_url(mobile: false) }/
              %source{media: "(min-width: 320px)", srcset: f.thumb_url(mobile: true ) }/
              %img{src: f.thumb_url(mobile: true)}/
