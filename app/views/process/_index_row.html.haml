- has_thumb = File.exist?(f.thumb_path)
- is_doujin = f.is_a? Doujin
- tr_class  = cycle :odd, :even

%tr{class: tr_class, data: {id: f.id}}
  %td.rm-or-batch
    - if @group_sort && is_doujin
      .likeness.is-size-7
        .tag.has-background-success(title="in collection")
          %span.icon.is-small
            %i.mi.mi-small save
        .tag.is-warning= "#{local_assigns[:pair_data]&.likeness}%"
    - else
      - if @group_sort
        .likeness.is-size-7
          - if local_assigns[:pair_data]
            .tag.has-background-info(title="duplicate")
              %span.icon.is-small
                %i.mi.mi-small file_copy
            .tag.is-warning= "#{local_assigns[:pair_data]&.likeness}%"
          - else
            .tag.has-background-grey(title="reference")
              %span.icon.is-small
                %i.mi.mi-small plagiarism
      = link_to('ðŸ—‘',
        {action: :delete_archive, path: f.name, page: params[:page], sort_by: params[:sort_by], term: params[:term], row: idx},
        method: :delete, data: { confirm: 'Delete this file?' },
        class: 'has-text-danger', title: 'delete file')
      .file-select.is-hidden= check_box_tag 'file_ids[]', f.id, false,
        id: '', data: {size: f.size}, tabindex: (1000+idx)
  %td.batch-size.file-size.has-text-right
    .size= number_to_human_size f.size
    - if f.images
      .images
        = f.images
        P
      - mean_page_weight = (f.size.to_f / f.images)
      - if mean_page_weight > (local_assigns[:max_page_weight] || 0.6.megabytes)
        .tag.is-warning.is-size-8= "#{number_to_human_size mean_page_weight}/P"
  %td.batch-bts
    - if @group_sort && is_doujin
      = render partial: 'doujin_actions', locals: { d: f, vertical: true }
    - else
      = render partial: 'file_actions', locals: {fname: f.name, id: f.id, vertical: true}
  %td
    %a{name: "row_#{idx}"}
    .name
      - bt_copy = capture do
        = link_to('#', title: 'copy file name',
          onclick: %Q|jQuery.myapp.copy_to_clipboard( jQuery(this).prev().text().trim() ); return false|,
          class: 'button is-info is-rounded is-small tiny-bt ml-2') do
          %span.icon.is-small
            %i.mi.mi-small content_copy
      
      - if @group_sort && is_doujin
        = link_to f.file_dl_name(omit_ext: true), doujin_path(f), target: :_blank
        %span.is-size-7
          &middot;
          = f.score || :'--'
          &star;
        = bt_copy
      - else
        - if @preparing_paths.include?(f.name)
          %span.tag.is-warning(title="processing") ðŸ› 
        = link_to f.name, action: :prepare_archive, path: f.name
        = bt_copy
        
        - unless has_thumb
          = link_to({job: :preview, id: f.id, page: params[:page]}, title: 'generate file preview',
            class: 'button is-info is-rounded is-small tiny-bt ml-2') do
            %span.icon.is-small
              %i.mi.mi-small preview
        - unless f.name.starts_with?(DJ_DIR_PROCESS_LATER) || f.name.starts_with?(DJ_DIR_REPROCESS)
          = link_to(process_later_process_path(id: f.id), title: 'process later',
            data: { confirm: 'Process this file later?' },
            class: 'button is-info is-rounded is-small tiny-bt ml-2') do
            %span.icon.is-small
              %i.mi.mi-small fast_forward
    - if @group_sort && is_doujin
      - if f.name_romaji.present?
        .name_kakasi.is-size-7= f.name_romaji
      - if f.name_eng.present?
        .name_eng.is-italic.is-size-7= f.name_eng
    - else
      - if f.name != f.name_kakasi
        .name_kakasi.is-size-7= f.name_kakasi
    - if @group_sort
      .grop-actions
        - if local_assigns[:pair_data].nil?
          %a.button.is-info.is-rounded.is-small.ml-2.mt-2(href="#" disabled title="can't ungroup the reference file")
            %span.icon.is-small
              %i.mi.mi-small remove
            %span= "ungroup #{f.id} @ ##{f.id}"
        - else
          = link_to(group_rm_process_path(id: local_assigns[:pair_data].id,
                                          parent_id: local_assigns[:pair_data].pd_parent_id,
                                          page: params[:page], sort_by: params[:sort_by], row: idx),
            method: :delete, data: { confirm: 'Remove file from group?' },
            title: 'remove from group', class: 'button is-info is-rounded is-small ml-2 mt-2') do
            %span.icon.is-small
              %i.mi.mi-small remove
            %span
              ungroup
              = is_doujin ? "[#{f.id}]" : f.id
              = "@ ##{local_assigns[:pair_data].pd_parent_id}"

- if @group_sort && is_doujin
  %tr.sample.freezeframe{class: tr_class}
    %td
    %td(colspan=3)
      .columns
        .column.is-5-mobile.is-3-tablet.is-3-desktop
          %figure.image.is2by3
            = link_to image_tag(f.thumb_path, loading: :lazy, decoding: :async),
              image_doujin_path(f, page: 0), target: :_blank
- else
  %tr{class: tr_class}
    %td
    %td(colspan=3)
      %input.input.is-small.pd-notes{value: f.notes, tabindex: (1100+idx), placeholder: :notes, maxlength: 255, data: {url: pd_notes_process_path(f.id)}}
      
      - if has_thumb
        %figure.image.sample.mt-2
          = link_to f.thumb_url(mobile: true), target: :_blank do
            %picture
              %source{media: "(min-width: 769px)", srcset: f.thumb_url(mobile: false) }/
              %source{media: "(min-width: 320px)", srcset: f.thumb_url(mobile: true ) }/
              %img{src: f.thumb_url(mobile: true)}/
