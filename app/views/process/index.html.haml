.container.is-max-desktop
  - if @refreshing
    .columns
      .column.is-1 refreshing
      .column.is-3
        %progress.progress.is-small.is-primary
    
    :javascript
      setTimeout(function () { window.location.reload(); }, 5000)
  - else
    - if @batches.any?
      .title.is-size-4= "Batch processing (#{@batches.size})"

      %table.table.is-striped.is-hoverable.ml-4
        %tbody
          - @batches.each do |f|
            %tr
              %td= link_to('ðŸ—‘', batch_process_path(id: f[:hash]),
                method: :delete, data: { confirm: 'Delete this batch job?' },
                class: 'has-text-danger', title: 'delete batch job')
              %td
                = link_to batch_process_path(id: f[:hash]) do
                  #{f[:time].strftime('%F %T')} / 
                  %span.is-family-monospace #{f[:hash][0..10]}...

    - if @preparing.any?
      .title.is-size-4= "Processing archives (#{@preparing.size})"

      %table.table.is-striped.is-hoverable.ml-4
        %tbody
          - @preparing.each do |f|
            %tr
              %td= link_to('ðŸ—‘', {action: :delete_archive_cwd, id: f[:working_dir]},
                method: :delete, data: { confirm: 'Delete this processing folder?' },
                class: 'has-text-danger', title: 'delete processing folder')
              %td.has-text-right= number_to_human_size f[:tot_size]
              %td= link_to f[:relative_path], action: :edit, id: f[:working_dir]

    -# files listing
    = form_with url: prepare_batch_process_index_path, method: :post do |f|
      .title.is-size-4= "Processable archives (#{@files.total_count})"
      
      .columns.my-0
        .column.py-0.pb-2
          %span Sort files by
          .select(style="vertical-align: middle")= select_tag :sort_by,
            options_for_select(ProcessIndexRefreshJob::ORDER, params[:sort_by]),
            onchange: %Q|window.location = '/process?sort_by='+jQuery(this).val()|
        .column.py-0
          .actions
            .field.has-addons.mb-4.is-justify-content-end
              .control
                = link_to '#', onclick: %Q|jQuery('tr.sample').toggleClass('is-hidden')|,
                  class: 'button is-small' do
                  %span.icon.is-small
                    %i.mi compare
                  %span thumbs
              .control
                = link_to '#', class: 'bt-batch button is-small',
                  onclick: %Q|jQuery('.batch-bt, .batch-rm, td.rm-or-batch > *, td.batch, .bt-reindex, .bt-preview').toggleClass('is-hidden'); return false| do
                  %span.icon.is-small
                    %i.mi.mi-small inventory_2
                  %span batch
              .control.batch-bt.is-hidden
                = link_to '#', class: 'bt-toggle-all button is-small',
                  onclick: %Q|jQuery('td.rm-or-batch :checkbox').each(function(){ $(this).prop('checked', !$(this).prop('checked')) }).first(); jQuery.app.update_tot_filesize(); return false| do
                  %span.icon.is-small
                    %i.mi select_all
                  %span toggle
              .control.batch-rm.is-hidden
                -# # https://stackoverflow.com/questions/3027149/how-do-i-create-multiple-submit-buttons-for-the-same-form-in-rails
                = f.button(type: :submit, class: 'button is-small is-danger',
                           formaction: batch_delete_process_index_path,
                           data: {confirm: 'Delete selected files?'}) do
                  %span.icon.is-small
                    %i.mi delete_forever
                  %span delete
              .control.batch-bt.is-hidden
                = f.button type: :submit, class: 'button is-link is-small' do
                  %span.icon.is-small
                    %i.mi send
                  %span prepare
                  %span.tot-file-size.is-size-8.ml-1
              .control
                = link_to({refresh: true}, class: 'bt-reindex button is-info is-small') do
                  %span.icon.is-small
                    %i.mi.mi-small refresh
                  %span refresh
              .control
                = link_to({preview: true, sort_by: params[:sort_by], page: params[:page]}, class: 'bt-preview button is-info is-small') do
                  %span.icon.is-small
                    %i.mi.mi-small preview
                  %span preview
      
      - if @files.empty?
        %em no files to process
      - else
        = page_entries_info @files

        %table.to_process.table.is-striped.is-hoverable.ml-4
          %tbody
            - @files.each_with_index do |f, idx|
              - has_thumb = File.exist?(f.thumb_path)
              
              %tr{data: {id: f.id}}
                %td.rm-or-batch
                  = link_to('ðŸ—‘',
                    {action: :delete_archive, path: f.name, page: params[:page], sort_by: params[:sort_by], row: idx},
                    method: :delete, data: { confirm: 'Delete this file?' },
                    class: 'has-text-danger', title: 'delete file')
                  .file-select.is-hidden= check_box_tag 'file_ids[]', f.id, false,
                    id: '', data: {size: f.size}, tabindex: (1000+idx)
                %td.batch.file-size.has-text-right
                  .size= number_to_human_size f.size
                  - if f.images
                    .images
                      = f.images
                      P
                %td.batch= render partial: 'file_actions', locals: {fname: f.name, id: f.id, vertical: true}
                %td
                  %a{name: "row_#{idx}"}
                  .name
                    - if @preparing_paths.include?(f.name)
                      %span.tag.is-warning(title="processing") ðŸ› 
                    = link_to f.name, action: :prepare_archive, path: f.name
                    - unless has_thumb
                      = link_to({preview: true, id: f.id}, title: 'generate file preview',
                        class: 'button is-info is-rounded is-small tiny-bt ml-2') do
                        %span.icon.is-small
                          %i.mi.mi-small preview
                    - unless f.name.starts_with?(DJ_DIR_PROCESS_LATER) || f.name.starts_with?(DJ_DIR_REPROCESS)
                      = link_to(process_later_process_path(id: f.id), title: 'process later',
                        class: 'button is-info is-rounded is-small tiny-bt ml-2') do
                        %span.icon.is-small
                          %i.mi.mi-small fast_forward
                  - if f.name != f.name_kakasi
                    .name_kakasi.is-size-7= f.name_kakasi
              - if has_thumb
                %tr.sample
                  %td
                  %td(colspan=3)
                    %figure.image
                      = link_to f.thumb_url(mobile: true), target: :_blank do
                        %picture
                          %source{media: "(min-width: 769px)", srcset: f.thumb_url(mobile: false) }/
                          %source{media: "(min-width: 320px)", srcset: f.thumb_url(mobile: true ) }/
                          %img{src: f.thumb_url(mobile: true)}/
        
        = paginate @files, params: {sort_by: params[:sort_by]}
